/* tslint:disable */
/* eslint-disable */
/**
 * Example API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CalculatePost200Response,
  CalculatePostRequest,
  GreetsGet200Response,
} from '../models/index';
import {
    CalculatePost200ResponseFromJSON,
    CalculatePost200ResponseToJSON,
    CalculatePostRequestFromJSON,
    CalculatePostRequestToJSON,
    GreetsGet200ResponseFromJSON,
    GreetsGet200ResponseToJSON,
} from '../models/index';

export interface CalculatePostOperationRequest {
    calculatePostRequest: CalculatePostRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Performs a calculation
     */
    async calculatePostRaw(requestParameters: CalculatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CalculatePost200Response>> {
        if (requestParameters['calculatePostRequest'] == null) {
            throw new runtime.RequiredError(
                'calculatePostRequest',
                'Required parameter "calculatePostRequest" was null or undefined when calling calculatePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/calculate`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CalculatePostRequestToJSON(requestParameters['calculatePostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CalculatePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Performs a calculation
     */
    async calculatePost(requestParameters: CalculatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CalculatePost200Response> {
        const response = await this.calculatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns a greeting message
     */
    async greetsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GreetsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/greets`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GreetsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns a greeting message
     */
    async greetsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GreetsGet200Response> {
        const response = await this.greetsGetRaw(initOverrides);
        return await response.value();
    }

}
